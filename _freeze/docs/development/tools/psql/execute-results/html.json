{
  "hash": "7cc60dc950d510a0a9a2fad56eb82527",
  "result": {
    "markdown": "---\ntitle: psql\n---\n\n[Cheat sheet](https://quickref.me/postgres)\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\n\nf = \"../../../static/development/commands.xlsx\"\n\nt4 = pd.read_excel(f, sheet_name=\"psql-commands\")\nt4.to_html(index=False)\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th>Command</th>\\n      <th>Detail</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <td>sudo -s postgres psql</td>\\n      <td>Connect to PostgreSQL as admin</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\l</td>\\n      <td>List all databases</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\c postgres</td>\\n      <td>Connect to the database named postgres</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\q</td>\\n      <td>Disconnect</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -d mydb</td>\\n      <td>Connecting to database</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -U john mydb</td>\\n      <td>Connecting as a specific user</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -h localhost -p 5432 mydb</td>\\n      <td>Connecting to a host/port</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -U admin -h 192.168.1.5 -p 2506 -d mydb</td>\\n      <td>Connect remote PostgreSQL</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -W mydb</td>\\n      <td>Force password</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -c \\'\\\\c postgres\\' -c \\'\\\\dt\\'</td>\\n      <td>Execute a SQL query or command</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -c \"\\\\l+\" -H postgres &gt; database.html</td>\\n      <td>Generate HTML report</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -l</td>\\n      <td>List all databases</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\dt</td>\\n      <td>Show all tables in a database</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# mydb -f file.sql</td>\\n      <td>Execute commands from a file</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# -V</td>\\n      <td>Print the psql version</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\df &lt;schema&gt;</td>\\n      <td>List functions in schema</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\du</td>\\n      <td>Show current user permission</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\d &lt;table&gt;</td>\\n      <td>Describe table</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\d+ &lt;table&gt;</td>\\n      <td>Describe table with details</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\di</td>\\n      <td>List indexes</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\du</td>\\n      <td>List roles</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\ds</td>\\n      <td>List sequences</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\copy …</td>\\n      <td>Import/export table</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\echo [string]</td>\\n      <td>Print string</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\i [file]</td>\\n      <td>Execute file</td>\\n    </tr>\\n    <tr>\\n      <td>postgres=# \\\\o [file]</td>\\n      <td>Export all results to file</td>\\n    </tr>\\n  </tbody>\\n</table>\n:::\n:::\n\n\n### Export table to CSV\n\n- `\\copy table TO '<path>' CSV`\n- `\\copy table(col1,col1) TO '<path>' CSV`\n- `\\copy (SELECT...) TO '<path>' CSV`\n  \n### Backup\n\nUse pg_dumpall to backup all databases\n\n`$ pg_dumpall -U postgres > all.sql`\n\nUse pg_dump to backup a database\n\n`$ pg_dump -d mydb -f mydb_backup.sql`\n\n- `-a`   Dump only the data, not the schema\n- `-s`   Dump only the schema, no data\n- `-c`   Drop database before recreating\n- `-C`   Create database before restoring\n- `-t`   Dump the named table(s) only\n- `-F`   Format (`c`: custom, `d`: directory, `t`: tar)\n\nUse `pg_dump -?` to get the full list of options\n\n### Restore\n\n`$ psql -U user mydb < mydb_backup.sql`\n\n#### pg_restore\n\n`$ pg_restore -d mydb mydb_backup.sql -c`\n\n- `-U   Specify a database user`\n- `-c   Drop database before recreating`\n- `-C   Create database before restoring`\n- `-e   Exit if an error has encountered`\n- `-F   Format (c: custom, d: directory, t: tar, p: plain text sql(default))`\n\nUse pg_restore -? to get the full list of options\n\n",
    "supporting": [
      "psql_files"
    ],
    "filters": [],
    "includes": {}
  }
}